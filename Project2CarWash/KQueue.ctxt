#BlueJ class context
comment0.target=KQueue
comment0.text=\ The\ KQueue\ interface\ specifies\ the\ methods\ for\ a\ <i>queue</i>\r\n\ \ data\ structure.\r\n\ \ <ul>\r\n\ \ \ \ <li>The\ enqueue\ method\ adds\ an\ element\ to\ the\ "back"\ of\ the\r\n\ \ \ \ \ \ \ \ data\ structure.\r\n\ \ \ \ <li>The\ dequeue\ method\ acts\ as\ follows\:\r\n\ \ \ \ \ \ \ \ <ul>\r\n\ \ \ \ \ \ \ \ <li>If\ the\ queue\ is\ empty,\ an\ exception\ is\ thrown.\r\n\ \ \ \ \ \ \ \ <li>If\ the\ queue\ contains\ one\ element,\ dequeue\ returns\ that\ element,\r\n\ \ \ \ \ \ \ \ \ \ leaving\ the\ queue\ empty.\r\n\ \ \ \ \ \ \ \ <li>If\ the\ queue\ contains\ multiple\ elements,\ dequeue\ returns\ the\r\n\ \ \ \ \ \ \ \ \ \ element\ at\ the\ "front"\ of\ the\ queue,\ the\ one\ that\ has\ been\ there\r\n\ \ \ \ \ \ \ \ \ \ longest.\r\n\ \ \ \ \ \ \ \ </ul>\r\n\ \ </ul>\r\n
comment1.params=
comment1.target=boolean\ isEmpty()
comment1.text=\ Returns\ <code>true</code>\ if\ this\ queue\ is\ empty;\r\n\ \ <code>false</code>\ otherwise.\r\n
comment2.params=item
comment2.target=void\ enqueue(java.lang.Object)
comment2.text=\ Adds\ a\ specified\ object\ to\ the\ "back"\ of\ this\ queue.\r\n\ \ \ \ @param\ item\ -\ the\ object\ to\ add\ to\ the\ queue\r\n
comment3.params=
comment3.target=java.lang.Object\ dequeue()
comment3.text=\ Removes\ the\ element\ at\ the\ "front"\ of\ this\ queue.\r\n\ \ \ \ @returns\ the\ removed\ element\r\n\ \ \ \ @throws\ NoSuchElementException\ if\ the\ queue\ is\ empty\r\n
comment4.params=
comment4.target=java.lang.Object\ peekFront()
comment4.text=\ Returns\ the\ element\ at\ the\ "front"\ of\ this\ queue,\ without\r\n\ \ modifying\ the\ queue.\r\n\ \ \ \ @returns\ the\ element\ at\ the\ front\ of\ the\ queue\r\n\ \ \ \ @throws\ NoSuchElementException\ if\ the\ queue\ is\ empty\r\n
comment5.params=
comment5.target=int\ size()
comment5.text=\ Returns\ the\ size\ of\ the\ queue.\ \r\n\ \ \ \ \ @returns\ the\ size\ of\ the\ queue.\ \r\n
numComments=6
